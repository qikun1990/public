[{"categories":["数据库学习"],"content":"mysql数据备份与还原 State “DONE” from “STARTED” [2020-07-26 Sun 09:15] State “STARTED” from “TODO” [2020-07-26 Sun 09:15] ","date":"2020-10-15","objectID":"/posts/linux-mysql-data-bak-rec/:0:0","tags":null,"title":"Linux下MySQL的备份与还原\u0026数据迁移","uri":"/posts/linux-mysql-data-bak-rec/"},{"categories":["数据库学习"],"content":"备份 mysqldump -u root -p joomla \u003e /tmp/joomla.sql ","date":"2020-10-15","objectID":"/posts/linux-mysql-data-bak-rec/:1:0","tags":null,"title":"Linux下MySQL的备份与还原\u0026数据迁移","uri":"/posts/linux-mysql-data-bak-rec/"},{"categories":["数据库学习"],"content":"还原 ","date":"2020-10-15","objectID":"/posts/linux-mysql-data-bak-rec/:2:0","tags":null,"title":"Linux下MySQL的备份与还原\u0026数据迁移","uri":"/posts/linux-mysql-data-bak-rec/"},{"categories":["数据库学习"],"content":"方法1 mysql -u root -p 回车，输入密码，进入MySQL的控制台 source /tmp/joomla.sql ","date":"2020-10-15","objectID":"/posts/linux-mysql-data-bak-rec/:2:1","tags":null,"title":"Linux下MySQL的备份与还原\u0026数据迁移","uri":"/posts/linux-mysql-data-bak-rec/"},{"categories":["数据库学习"],"content":"方法2 mysql -u root -p joomla \u003c /tmp/joomla.sql ","date":"2020-10-15","objectID":"/posts/linux-mysql-data-bak-rec/:2:2","tags":null,"title":"Linux下MySQL的备份与还原\u0026数据迁移","uri":"/posts/linux-mysql-data-bak-rec/"},{"categories":["EMACS学习"],"content":"自用的emacs插件 State “DONE” from “STARTED” [2020-07-26 Sun 09:14] State “STARTED” from “TODO” [2020-07-26 Sun 09:14] helm搜索 yasnippet代码块 org-caption org-mode table中英文对齐 dired dired使用说明 本文本中快速搜索，使用了evil模式，/快速搜索 ox-hugo nyan-mode通过包管理安装而不是配置文件 cat猫显示光标在文件中的位置 evil安装：先通过包管理安装undo-tree，然后通过包管理安装evil 参考文章 Master Emacs in 21 Days Spacemacs 使用总结 org-mode简明手册 Emacs学习笔记(10):Org-mode,最强的任务管理利器，没有之一 org-mode简明手册 ","date":"2020-10-15","objectID":"/posts/usual-use-emacs-plugins/:0:0","tags":null,"title":"我常用的EMACS插件","uri":"/posts/usual-use-emacs-plugins/"},{"categories":["重学JAVA"],"content":" State “HOLD” from “WAITING” [2020-10-01 Thu 08:01] 待以后有时间再写 State “DONE” from “WAITING” [2020-10-01 Thu 07:59] State “STARTED” from “TODO” [2020-07-26 Sun 09:59] 开始学习java泛型 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:0:0","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"学习路径 读java编程思想中泛型一章 学习b站黑马程序员泛型的教程 敲代码 形成blog ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:1:0","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"编程思想第15章泛型 泛型的概念 泛型的英文是generic，也就是通用的意思，泛型实现了参数化类型的概念，泛型的本质就是类型参数化。 通过解耦类或方法与所使用的类型之间的约束，实现类或方法具备最广泛的表达能力。 泛型出现的很重要的一个原因就是为了创建容器类，就是存放要使用的对象的地方，在JavaSE5之前，没有泛型的时候，我们可以通过让这个类直接持有Object类型的对象， 实现容器持有不同类型的对象。 package generics; public class Holder2 { private Object a; public Holder2(Object a) { this.a = a; } Object get() { return this.a; } public void set(Object a) { this.a = a; } public static void main(String[] args) { Holder2 h2 = new Holder2(new Automobile()); Automobile a = (Automobile) h2.get(); System.out.println(a); h2.set(\"Not an Automobile\"); String s = (String) h2.get(); System.out.println(s); h2.set(1); Integer x = (Integer) h2.get(); System.out.println(x); } } 通常而言，我们只希望容器持有一种类型对象，泛型的主要目的之一就是用来指定容器要持有什么类型的对象，而且由编译器来保证类型的正确性。 因此，与其使用object，我们更喜欢暂时不指定类型，而是在使用的时候再决定具体使用什么类型，要达到这个目的，需要使用类型参数，用尖括号括住， 放在类名后面。然后在使用这个类的时候，再用实际的类型替换这个类型参数。 如下代码，T就是类型参数： package generics; public class Holder3\u003cT\u003e { private T a; public Holder3(T a) { this.a = a; } T get() { return this.a; } public void set(T a) { this.a = a; } public static void main(String[] args) { // 尖括号中指定了Automobile这个对象类型，这个容器中只能放入该类型或该类型的子类 // 若未指定具体对象类型，则默认是Object Holder3\u003cAutomobile\u003e h2 = new Holder3\u003c\u003e(new Automobile());// 后面\u003c\u003e中无需填写，编译器会自动推断，菱形语法 Automobile a = h2.get(); System.out.println(a); // h2.set(\"Not an Automobile\");// 指定了Automobile类型，放入String类型会报错 // h2.set(1);// 同上，放入Integer类型报错 } } 使用泛型实现一个堆栈类 package com.eoebook.test; public class LinkedStack\u003cT\u003e { private static class Node\u003cU\u003e { U item; Node\u003cU\u003e next; Node() { item = null; next = null; } Node(U item, Node\u003cU\u003e next) { this.item = item; this.next = next; } boolean end() { return item == null \u0026\u0026 next == null; } } private Node\u003cT\u003e top = new Node\u003cT\u003e(); // 用于判断堆栈何时为空，书中称末端哨兵 public void push(T item) { top = new Node\u003cT\u003e(item, top); } public T pop() { T result = top.item; if (!top.end()) top = top.next; return result; } public static void main(String[] args) { LinkedStack\u003cString\u003e lss = new LinkedStack\u003cString\u003e(); // 切分Phasers on stun!后，存入lss中，压栈 for (String s : \"Phasers on stun!\".split(\" \")) { lss.push(s); } // 从lss取出上一步放入的对象，弹栈 String s; while ((s = lss.pop()) != null) {//末端哨兵用于此处 System.out.println(s); } } } ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:2:0","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"b站黑马程序员泛型教程 JavaSE强化教程泛型，由点到面的讲解了整个泛型体系。 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:0","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"什么是泛型？ 泛型的概念 java泛型提供了编译时类型安全监测机制，该机制允许我们在编译时检测到非法的类型数据结构。 泛型的本质就是参数化类型，也就是所操作的数据类型被指定为一个参数。 泛型的好处 类型安全 消除了强制类型的转换 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:1","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"泛型类、接口 泛型类 泛型类的定义语法 class demo\u003cT\u003e{ private T t; } 常用的泛型标识：T、E、K、V 使用语法 https://www.bilibili.com/video/BV1xJ411n77R?p=2 P2 05:43 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:2","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"泛型方法 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:3","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"类型通配符 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:4","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"类型擦除 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:5","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"泛型和数组 ","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:6","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["重学JAVA"],"content":"泛型和反射","date":"2020-07-26","objectID":"/posts/java-generic-learning-record/:3:7","tags":null,"title":"JAVA泛型学习记录 [0/1]","uri":"/posts/java-generic-learning-record/"},{"categories":["OTHER"],"content":"开发工作中熟悉一些DOS命令能极大的提高工作效率，本文总结了一些常用的DOS命令。 本文的命令未做验证，最近几天有时间我会逐个测试验证。 本文参考文章如下： Window常用DOS命令 ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:0:0","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"常用的DOS命令 ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:0","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"ipconfig 查看网络配置信息 /all 显示更完整网络配置信息\r/renew 计算机与DHCP服务器联系，并租用一个IP地址，注意：大多数情况下网卡将被重新赋予和以前所赋予的相同的IP地址。\r/release 释放所有地址\r/flushdns 刷新DNS解析缓存\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:1","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"ping 检查网络联通性 -t 不停ping目标主机\r-n 设置数据包数量，默认发送四个\r-l 设置数据包大小，最大为65500字节\r-i 设置TTL值，即数据包在网络中的存活时间，最大255\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:2","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"dir 查看磁盘中文件 /a 查看指定属性文件\r/c 显示内容的文件大小中使用千位分隔符，这是默认值，/-c可以取消显示\r/b 只显示文件和文件夹的名称和扩展名\r/d 类似/b，分栏列出，包含当前和上一级目录，显示存储空间统计\r/o 按一定顺序进行排序\r/p 信息多时，屏幕暂停，分页显示\r/q 显示文件所有者\r/s 显示指定目录及其所有子目录文件\r/t 控制显示或分类的时间字符域\r\"/A\" 参数的属性\rD 目录\rR 只读文件\rH 隐藏文件\rA 准备存档的文件\rS 系统文件\rI 无内容索引文件\rL 解析点\r- 表示’否‘的前缀\r\"/T\" 时间域表示\rC 文件创建时间\rA 最后一次访问时间\rW 最后一次写入时间\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:3","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"cd 注意：切换盘符不需要命令，直接输入盘符 + “：” 即可。例：D： #切换到D盘下 ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:4","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"net user 显示所有用户（不包含隐藏用户），查看指定用户信息 /add 添加用户\r/del 删除用户\r/times 设置用户使用时间段\r/homedir 设置用户家目录\r/expires 设置用户过期时间\r/active:[yes|no] 激活或停用账户\r/passwordchg:[yes|no] 设置用户是否可以更改自己的密码\rnet user admin 123456 /add #添加一个密码为123456的用户admin\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:5","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"net localgroup 用于修改计算机上的本地组。当不带选项使用本命令时，它会显示计算机上的本地组 /add 将一个组名或一个用户名添加到一个本地组中\r/delete 将一个组名或一个用户名从一个本地组中删除\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:6","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"netstat 显示网络连接、路由表、和网络接口信息 -a 显示所有连接和监听端口\r-b 显示每个连接或监听端口关联的可执行程序\r-e 显示以太网统计数据、\r-f 显示外部地址的完全限定域名（FQDN）\r-n 以数字形式显示地址和端口号\r-o 显示拥有的与每个连接关联的进程ID\r-p 显示指定协议连接，可以是TCP、UDP、TCPv6或UDPv6\r-r 显示路由表\r-s 显示每个协议的统计\r-t 显示当前连接卸载状态\r显示端口占用进程号，并将域名和服务转化为IP和端口号\rnetstat -ano\r配合find精确查找信息\rnetstat -ano | find \":80\"\r显示各种网络统计信息\rnetstat -e\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:7","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"systeminfo 显示关于计算机及其操作系统的详细配置信息，包括补丁信息 远程查看必须开启rpc服务 -s 可以指定连接到的远程系统\r-u 指定在哪个用户下执行命令\r-p 为指定的用户输入密码\r-fo 指定显示信息的打印格式，有效值为TABLE、LIST、CSV\r-nh 指定列标题不在结果中显示，只对TABLE和CSV格式有效\r查看远程计算机信息\rsysteminfo -s 10.10.10.5 /u administrator /p 123456\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:8","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"tracert 探查网络结构，检查网络故障点 -d 不将地址解析成主机名\r-h 限制搜索目标的最大跃点数\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:9","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"telnet 计算机资源共享，网络入侵，远程登录（默认端口23） 注意：使用前必须开启telnet服务 -a 使客户端可以省略查找账户的过程，但仍需要输入密码\r-e 跳过字符进入telnet客户端提示界面，但不进行连接\r-f 指定客户端登陆的文件名\r-l 指定远程登陆系统登陆用的用户名称\r-t 指定终端类型\rtlntadmn config port=1023\r#修改telnet端口为1023,(此命令只能转移到小于1024的端口)\r例如：连接到10.10.10.5主机的1023端口：\rtelnet 10.10.10.5 1023\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:10","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"arp 对arp表（IP和MAC地址对应关系）进行修改 -a 查询，显示当前arp项\r-d 删除指定主机的arp表项\r-s 添加arp表项\r-g 与-a相同\r-v 显示详细信息\r-n 显示指定网络接口arp项\r查看指定接口详细信息\rarp -anv 127.0.0.1\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:11","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"tasklist 显示在本地或远程机器上当前运行的进程列表 -s 指定连接到远程系统\r-u 指定在哪个用户下执行命令\r-p 为指定的用户输入密码\r-v 显示更详细任务信息\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:12","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"taskkill 杀死进程 /pid 指定进程ID\r/f 强行终止进程\rWindows下查看并杀死23端口占用\r","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:1:13","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"其他快捷命令 按下“win” + “R” 键，然后输入以下命令，即可打开对应程序： ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:0","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"桌面 explorer ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:1","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"控制面板 control ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:2","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"本地安全策略 secpol.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:3","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"策略组 gpedit.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:4","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"注册表 regedit ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:5","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"开机启动 msconfig ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:6","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"本地用户和组 lusrmgr.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:7","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"事件查看器 eventvwr ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:8","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"查看共享 fsmgmt.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:9","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"计算机管理 compmgmt.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:10","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"磁盘管理 diskmgmt.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:11","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"服务管理 services.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:12","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"防火墙 firewall.cpl ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:13","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"网络连接 ncpa.cpl ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:14","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"添加删除程序 appwiz.cpl ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:15","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"关机 shutdown -s ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:16","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"重启 shutdown -r ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:17","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"注销 logoff ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:18","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"任务计划程序 taskschd.msc ","date":"2020-06-13","objectID":"/posts/developer-most-commonly-use-dos-command/:2:19","tags":null,"title":"开发工程师常用的dos命令以及快捷命令","uri":"/posts/developer-most-commonly-use-dos-command/"},{"categories":["OTHER"],"content":"docker demo git clone https://github.com/docker/getting-started.git cd getting-started docker build -t docker101tutorial . docker run -d -p 80:80 –name docker-tutorial docker101tutorial ","date":"2020-10-15","objectID":"/posts/docker-tutorial/:0:0","tags":null,"title":"docker tutorial","uri":"/posts/docker-tutorial/"},{"categories":["重学JAVA"],"content":"开始学习注解 ","date":"2020-09-15","objectID":"/posts/annotation-reflection-bytecode-class-loading-mechanism/:0:0","tags":null,"title":"12_注解_反射_字节码_类加载机制","uri":"/posts/annotation-reflection-bytecode-class-loading-mechanism/"},{"categories":["重学JAVA"],"content":"注解 内置注解 JDK自带的注解 元注解 修饰注解的注解 自定义注解 ","date":"2020-09-15","objectID":"/posts/annotation-reflection-bytecode-class-loading-mechanism/:1:0","tags":null,"title":"12_注解_反射_字节码_类加载机制","uri":"/posts/annotation-reflection-bytecode-class-loading-mechanism/"},{"categories":["EMACS学习"],"content":"如何使用org-mode和hugo搭建一个blog的工作流？ ","date":"2020-05-04","objectID":"/posts/how-to-build-blog-by-orgmode-hugo/:0:0","tags":["ox-hugo"],"title":"如何使用org-mode和hugo搭建一个blog的工作流？","uri":"/posts/how-to-build-blog-by-orgmode-hugo/"},{"categories":["EMACS学习"],"content":"安装hugo 可以参考如下文章安装使用Hugo hugo快速开始 Hugo搭建博客教程 1 我使用的是window系统，建议下载hugo_extended_0.69.0_Windows-64bit.zip类似这种的extended版本，这种版本支持编译sass。 2 配置hugo.exe到环境变量中去，这样就可以随处执行这个命令。 3 使用Hugo快速生成站点，比如希望生成到 /path/to/site 路径： $ hugo new site /path/to/site 4 这样就在 /path/to/site 目录里生成了初始站点，进去目录： $ cd /path/to/site 5 这样就在 /path/to/site 目录里生成了初始站点，进去目录： $ cd /path/to/site $ ls ▸ archetypes/ ▸ content/ ▸ layouts/ ▸ static/ config.toml 6 创建一个 about 页面： $ hugo new about.md 7 about.md 自动生成到了 content/about.md ，可以打开 about.md 看下，markdown格式的。 8 创建第一篇文章，放到 post 目录，方便之后生成聚合页面。 $ hugo new post/first.md 9 到 皮肤列表 挑选一个心仪的皮肤，比如你觉得 even 皮肤不错，找到相关的 GitHub 地址，创建目录 themes，在 themes 目录里把皮肤 git clone 下来， 并且把even中config.toml文件copy到站点根目录下 git clone https://github.com/olOwOlo/hugo-theme-even themes/even 10 在你的站点根目录执行 Hugo 命令进行调试： $ hugo server --theme=even --buildDrafts 11 浏览器里打开： http://localhost:1313 12 部署blog 假设你需要部署在 GitHub Pages 上，首先在GitHub上创建一个Repository，命名为：qikun1990.github.io （qikun1990替换为你的github用户名）。 在站点根目录执行 Hugo 命令生成最终页面： $ hugo --theme=even --baseUrl=\"https://qikun1990.github.io/\" （注意，以上命令并不会生成草稿页面，如果未生成任何文章，请去掉文章头部的 draft=true 再重新生成。） 如果一切顺利，所有静态页面都会生成到 public 目录，将pubilc目录里所有文件 push 到刚创建的Repository的 master 分支。 $ cd public $ git init $ git remote add origin https://github.com/qikun1990/qikun1990.github.io.git $ git add -A $ git commit -m \"first commit\" $ git push -u origin master 浏览器里访问：https://qikun1990.github.io/ github pages部署好后无法加载css、js？ 一般都是生成最终页面时给的baseUrl不正确 如何使用个人域名？ 1 通过ping获得github pages的ip 2 在域名提供商处增加如下两个解析 CNAME WWW qikun1990.github.io A @ 上一步ping到的ip 3 在github上添加域名 ","date":"2020-05-04","objectID":"/posts/how-to-build-blog-by-orgmode-hugo/:1:0","tags":["ox-hugo"],"title":"如何使用org-mode和hugo搭建一个blog的工作流？","uri":"/posts/how-to-build-blog-by-orgmode-hugo/"},{"categories":["EMACS学习"],"content":"配置emacs emacs\u0026ox-hugo配置可以参考如下文章 Org to Markdown for Hugo 使用 Emacs + ox-hugo 来写博客 轻松使用 ox-hugo 来创建博文 1 安装emacs，并安装ox-hugo插件 这个插件的本质就是把我们编写的org文件转换成md格式的文件，我们只需要在模板里指定md文件的生成路径就可以了 2 编写用于生成hugo所需的md文件的org文件模板 3 复制一份模板，编写blog 4 使用快捷键C c C e H H生成md文件只hugo目录下 5 启动hugo本地服务，即可查看发布的文章 ","date":"2020-05-04","objectID":"/posts/how-to-build-blog-by-orgmode-hugo/:2:0","tags":["ox-hugo"],"title":"如何使用org-mode和hugo搭建一个blog的工作流？","uri":"/posts/how-to-build-blog-by-orgmode-hugo/"},{"categories":["OTHER"],"content":"docker安装mysql State “DONE” from “STARTED” [2020-07-26 Sun 09:16] State “STARTED” from “TODO” [2020-07-26 Sun 09:16] ","date":"2020-10-15","objectID":"/posts/docker-install-mysql/:0:0","tags":null,"title":"docker安装mysql","uri":"/posts/docker-install-mysql/"},{"categories":["OTHER"],"content":"docker 中下载 mysql docker pull mysql ","date":"2020-10-15","objectID":"/posts/docker-install-mysql/:1:0","tags":null,"title":"docker安装mysql","uri":"/posts/docker-install-mysql/"},{"categories":["OTHER"],"content":"启动 docker run –name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql ","date":"2020-10-15","objectID":"/posts/docker-install-mysql/:2:0","tags":null,"title":"docker安装mysql","uri":"/posts/docker-install-mysql/"},{"categories":["OTHER"],"content":"进入容器 docker exec -it mysql-test bash ","date":"2020-10-15","objectID":"/posts/docker-install-mysql/:3:0","tags":null,"title":"docker安装mysql","uri":"/posts/docker-install-mysql/"},{"categories":["OTHER"],"content":"登录mysql mysql -u root -p ALTER USER ‘root’@‘localhost’ IDENTIFIED BY ‘123456’; ","date":"2020-10-15","objectID":"/posts/docker-install-mysql/:4:0","tags":null,"title":"docker安装mysql","uri":"/posts/docker-install-mysql/"},{"categories":["OTHER"],"content":"添加远程登录用户 CREATE USER ‘qikun’@'%’ IDENTIFIED BY ‘123456’; –若报错1396则执行如下命令 drop user ‘qikun’@'%'; flush privileges; GRANT ALL PRIVILEGES ON . TO ‘qikun’@'%'; ","date":"2020-10-15","objectID":"/posts/docker-install-mysql/:5:0","tags":null,"title":"docker安装mysql","uri":"/posts/docker-install-mysql/"},{"categories":["EMACS学习"],"content":"Emacs: Edit Column Text, Rectangle Commands C-@ 选择区域 C-x ft 插入 C-x fk 删除 ","date":"2020-10-15","objectID":"/posts/emacs-col-edit-model/:0:0","tags":null,"title":"emacs列编辑模式","uri":"/posts/emacs-col-edit-model/"},{"categories":["OTHER"],"content":"后续更新 State “DONE” from “STARTED” [2020-07-26 Sun 09:16] State “STARTED” from “TODO” [2020-07-26 Sun 09:16] ","date":"2020-10-15","objectID":"/posts/docker-base-use/:0:0","tags":null,"title":"docker基本操作简单说明","uri":"/posts/docker-base-use/"},{"categories":["OTHER"],"content":"如何进入容器 docker exec -it mysql-test bash docker attach ","date":"2020-10-15","objectID":"/posts/docker-base-use/:1:0","tags":null,"title":"docker基本操作简单说明","uri":"/posts/docker-base-use/"},{"categories":["OTHER"],"content":"复制文件到容器 docker cp filename 容器名:/tmp/","date":"2020-10-15","objectID":"/posts/docker-base-use/:2:0","tags":null,"title":"docker基本操作简单说明","uri":"/posts/docker-base-use/"},{"categories":["EMACS学习"],"content":"emacs使用中经常遇到的问题 ","date":"2020-05-04","objectID":"/posts/emacs-keyboard-shortcut/:0:0","tags":["shortcut"],"title":"emacs使用以及常用快捷键积累","uri":"/posts/emacs-keyboard-shortcut/"},{"categories":["EMACS学习"],"content":"常用快捷键 C a 移动到最前面 C e 移动到最后面 C+/ 撤销 C+x u 撤销 C+w 剪切 M+w 复制 C+y 粘贴 C x C f 打开文件 C x C r 最近打开的文件 C c C e H H ox-hugo生成md文件 org-hugo-export-to-md Ctl xf 目录切换 C x C b 打开buffer列表 快速记录想法 org-capture SPC C c t 查看之前记录的想法 org-capture-goto-last-stored C-c C-f 下一个同级的标题 C-c C-b 上一个同级的标题 ","date":"2020-05-04","objectID":"/posts/emacs-keyboard-shortcut/:1:0","tags":["shortcut"],"title":"emacs使用以及常用快捷键积累","uri":"/posts/emacs-keyboard-shortcut/"},{"categories":["EMACS学习"],"content":"如何使用agenda管理工作 . 给TODO添加SCHEDULED时间 . C c [ 加入议程文件列表 . C c a a即可查看指定时间的代办事项 ","date":"2020-05-04","objectID":"/posts/emacs-keyboard-shortcut/:2:0","tags":["shortcut"],"title":"emacs使用以及常用快捷键积累","uri":"/posts/emacs-keyboard-shortcut/"},{"categories":["EMACS学习"],"content":"如何生成工作用时报表 . 光标移动到要生成的条目上 . ALT X . org-clock-report ","date":"2020-05-04","objectID":"/posts/emacs-keyboard-shortcut/:3:0","tags":["shortcut"],"title":"emacs使用以及常用快捷键积累","uri":"/posts/emacs-keyboard-shortcut/"},{"categories":["EMACS学习"],"content":"如何在当前文件插入一个包含像 Org 表格一样的计时报告的动态块 方法1:执行org-clock-report 方法2:绑定快捷键(org-defkey org-mode-map (kbd “C-c C-x C-r”) #‘org-clock-report) ","date":"2020-05-04","objectID":"/posts/emacs-keyboard-shortcut/:4:0","tags":["shortcut"],"title":"emacs使用以及常用快捷键积累","uri":"/posts/emacs-keyboard-shortcut/"},{"categories":["OTHER"],"content":"执行命令：brew update-reset，重新设置下brew的配置。 ","date":"2020-10-15","objectID":"/posts/homebrew-update-error/:0:0","tags":null,"title":"HomeBrew update 更新后报错无法使用的解决方案","uri":"/posts/homebrew-update-error/"},{"categories":["EMACS学习"],"content":"使用yasnippet提高效率 yasnippet无法正常使用处理办法 ","date":"2020-05-04","objectID":"/posts/how-to-use-yasnippet/:0:0","tags":["yasnippet"],"title":"yasnippet使用简单说明","uri":"/posts/how-to-use-yasnippet/"},{"categories":["EMACS学习"],"content":"简介 yasnippet是emacs下一套高效的模版(代码块)系統，它允许自定义模版内容并通过tab自动展示，省去了很多重复编写复杂代码块的时间，提高了开发的效率。 官方描述：YASnippet is a template system for Emacs. It allows you to type an abbreviation and automatically expand it into function templates. ","date":"2020-05-04","objectID":"/posts/how-to-use-yasnippet/:1:0","tags":["yasnippet"],"title":"yasnippet使用简单说明","uri":"/posts/how-to-use-yasnippet/"},{"categories":["EMACS学习"],"content":"安装配置 对于yasnippet的安装可以查看yasnippet github。 ;; 代码块配置 (add-to-list 'load-path \"~/.emacs.d/plugins/yasnippet\") (require 'yasnippet) (yas-global-mode 1) ","date":"2020-05-04","objectID":"/posts/how-to-use-yasnippet/:2:0","tags":["yasnippet"],"title":"yasnippet使用简单说明","uri":"/posts/how-to-use-yasnippet/"},{"categories":["EMACS学习"],"content":"创建自定义模版 当安装完yasnippet插件后，在emacs下执行M-x yas-new-snippet 回车执行，将会出来初始化自定义模版 第一行# -- mode: snippet --表示当前的模版文件文件mode为snippet-mode，一般默认。 第二行# name:描述当前的模版名称(模版的功能描述)。 第三行# key:为模版的调用快捷键。 第四行# –从该语句下面即为自定义模版内容。 下面我将简单自定义一个js的alert代码，如下所示： alert(‘hello’); JSON 在这里我添加第二行用于声明模版创建者，alert(‘hello’)即为当在js-mode下输入alert按tab之后自动展示的模版内容。 按下C-c C-c保存该自定义模版，根据提示选择model(执行yas-new-snippet时文件的model，在这里为js-mode)，然后保存文件。 那么当我在js-mode文件下输入alert按tab后将会出来alert(‘hello’)自定义代码块。 ","date":"2020-05-04","objectID":"/posts/how-to-use-yasnippet/:3:0","tags":["yasnippet"],"title":"yasnippet使用简单说明","uri":"/posts/how-to-use-yasnippet/"},{"categories":["EMACS学习"],"content":"高级模版 snippet的语法变量是由$美元符号开始，并且标注1，2，3来定义顺序。 在模版内tab健移动光标并由特殊的$0来指明光标最后停留位置。 自定义模版代码如下： function \\({1: className} (\\){2: args}) { $0 } JSON 保存模版后输入function按tab将会显示 function className (args) { } JSON 并且光标停留在className处，当按下tab后，光标跳到args处，再按下tab光标跳到函数内部，也就是顺序为$1，$2，$0。 ${1: className}的语法规则为$声明，1为序号，clasName为默认名称(也可以为空)。 ","date":"2020-05-04","objectID":"/posts/how-to-use-yasnippet/:4:0","tags":["yasnippet"],"title":"yasnippet使用简单说明","uri":"/posts/how-to-use-yasnippet/"},{"categories":["OTHER"],"content":"MAC上AnkiConnect连接失败问题处理 State “DONE” from “STARTED” [2020-07-26 Sun 09:16] State “STARTED” from “TODO” [2020-07-26 Sun 09:16] 使用 Chrome 上的 Anki 取词插件时，将单词添加至新卡片的功能需要依靠 AnkiConnect 插件连接桌面客户端与取词插件。 由于 Mac 系统的机制，会导致 Anki 客户端处于后台时，AnkiConnect 的进程被挂起。 结果是取词插件设置页面检测不到 AnkiConnect，或者检测到并设置好后短时间内连接又断开。 打开终端执行下面三行命令 defaults write net.ankiweb.dtop NSAppSleepDisabled -bool true defaults write net.ichi2.anki NSAppSleepDisabled -bool true defaults write org.qt-project.Qt.QtWebEngineCore NSAppSleepDisabled -bool true 重启 Anki 客户端 官方文档原文： Notes for Mac OS X Users Starting with Mac OS X Mavericks, a feature named App Nap has been introduced to the operating system. This feature causes certain applications which are open (but not visible) to be placed in a suspended state. As this behavior causes AnkiConnect to stop working while you have another window in the foreground, App Nap should be disabled for Anki: Start the Terminal application. Execute the following commands in the terminal window: defaults write net.ankiweb.dtop NSAppSleepDisabled -bool true defaults write net.ichi2.anki NSAppSleepDisabled -bool true defaults write org.qt-project.Qt.QtWebEngineCore NSAppSleepDisabled -bool true Restart Anki. ","date":"2020-10-15","objectID":"/posts/mac-ankiconnect-connect-fail/:0:0","tags":null,"title":"Mac 版 Anki 安装 AnkiConnect 插件后连接失败解决方法","uri":"/posts/mac-ankiconnect-connect-fail/"},{"categories":["EMACS学习"],"content":"给org-pomodoro添加弹出框以及声音提示 ","date":"2020-05-05","objectID":"/posts/how-to-add-sound-for-org-pomodoro/:0:0","tags":["pomodoro"],"title":"mac环境org-pomodoro番茄钟添加提示信息以及声音","uri":"/posts/how-to-add-sound-for-org-pomodoro/"},{"categories":["EMACS学习"],"content":"安装terminal-notifier brew install terminal-notifier ","date":"2020-05-05","objectID":"/posts/how-to-add-sound-for-org-pomodoro/:1:0","tags":["pomodoro"],"title":"mac环境org-pomodoro番茄钟添加提示信息以及声音","uri":"/posts/how-to-add-sound-for-org-pomodoro/"},{"categories":["EMACS学习"],"content":"在init.el中配置如下 ","date":"2020-05-05","objectID":"/posts/how-to-add-sound-for-org-pomodoro/:2:0","tags":["pomodoro"],"title":"mac环境org-pomodoro番茄钟添加提示信息以及声音","uri":"/posts/how-to-add-sound-for-org-pomodoro/"},{"categories":["EMACS学习"],"content":"定义通知函数 (defun notify-osx (title message) (call-process \"terminal-notifier\" nil 0 nil \"-group\" \"Emacs\" \"-title\" title \"-sound\" \"deflaut\" \"-message\" message \"-activate\" \"org.gnu.Emacs\")) ","date":"2020-05-05","objectID":"/posts/how-to-add-sound-for-org-pomodoro/:2:1","tags":["pomodoro"],"title":"mac环境org-pomodoro番茄钟添加提示信息以及声音","uri":"/posts/how-to-add-sound-for-org-pomodoro/"},{"categories":["EMACS学习"],"content":"调用通知函数 (add-hook 'org-pomodoro-finished-hook (lambda () (notify-osx \"Pomodoro completed!\" \"Time for a break.\"))) (add-hook 'org-pomodoro-break-finished-hook (lambda () (notify-osx \"Pomodoro Short Break Finished\" \"Ready for Another?\"))) (add-hook 'org-pomodoro-long-break-finished-hook (lambda () (notify-osx \"Pomodoro Long Break Finished\" \"Ready for Another?\"))) (add-hook 'org-pomodoro-killed-hook (lambda () (notify-osx \"Pomodoro Killed\" \"One does not simply kill a pomodoro!\"))) ","date":"2020-05-05","objectID":"/posts/how-to-add-sound-for-org-pomodoro/:2:2","tags":["pomodoro"],"title":"mac环境org-pomodoro番茄钟添加提示信息以及声音","uri":"/posts/how-to-add-sound-for-org-pomodoro/"},{"categories":["OTHER"],"content":"mac安装gcc报错问题处理 State “DONE” from “STARTED” [2020-07-26 Sun 08:48] 报错已处理 State “STARTED” from “TODO” [2020-07-26 Sun 08:47] 安装gcc报错如下 zhangpeipeideMacBook-Air:~ qikun$ brew install gcc\rWarning: Your Xcode (11.1) is outdated.\rPlease update to Xcode 11.4.1 (or delete it).\rXcode can be updated from the App Store.\rWarning: Building gcc from source:\rThe bottle needs the Xcode CLT to be installed.\rxcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun\rError: An exception occurred within a child process:\rCompilerSelectionError: gcc cannot be built with any available compilers.\rInstall GNU's GCC:\rbrew install gcc\r通过appstore安装xcode后继续安装gcc报错如下 zhangpeipeideMacBook-Air:~ qikun$ brew install gcc\rWarning: Building gcc from source:\rThe bottle needs the Xcode CLT to be installed.\rxcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun\rError: An exception occurred within a child process:\rCompilerSelectionError: gcc cannot be built with any available compilers.\rInstall GNU's GCC:\rbrew install gcc\r原因是 在从App Store上下载Xcode后，默认是不会安装Command Line Tools的. 先更新一下xcode，继续安装gcc zhangpeipeideMacBook-Air:~ qikun$ xcode-select --install\rxcode-select: note: install requested for command line developer tools\r","date":"2020-10-15","objectID":"/posts/mac-gcc/:0:0","tags":null,"title":"mac安装gcc报错","uri":"/posts/mac-gcc/"},{"categories":["EMACS学习"],"content":" State “DONE” from “STARTED” [2020-07-20 Mon 20:01] 测试验证图片显示问题 State “STARTED” from “TODO” [2020-07-20 Mon 20:01] org-mode中如何显示隐藏图片 C-c C-x C-v 切换图片是否显示 图文混排，引入图片方式1 ","date":"2020-07-19","objectID":"/posts/org-mode-pic-content-simple-descrption/:0:0","tags":null,"title":"图文混排简单说明","uri":"/posts/org-mode-pic-content-simple-descrption/"},{"categories":["EMACS学习"],"content":"这里是mac下配置smart-input-source的方式 State “DONE” from “STARTED” [2020-07-26 Sun 09:14] State “STARTED” from “TODO” [2020-07-26 Sun 09:14] ;; 使用smart-input-source前需先安装macism，这个是切换mac中输入法的工具 ;; 配置smart-input-source,20200725目前最新版的包名已经改成sis，包括方法前缀均已改变 (smart-input-source-ism-lazyman-config \"com.apple.keylayout.ABC\" \"com.apple.inputmethod.SCIM.ITABC\") ;; enable the /cursor color/ mode (smart-input-source-global-cursor-color-mode t) ;; enable the /respect/ mode (smart-input-source-global-respect-mode t) ;; enable the /follow context/ mode for all buffers (smart-input-source-global-follow-context-mode t) ;; enable the /inline english/ mode for all buffers (smart-input-source-global-inline-mode t) ","date":"2020-10-15","objectID":"/posts/install-smart-input-source/:0:0","tags":null,"title":"安装配置smart-input-source","uri":"/posts/install-smart-input-source/"},{"categories":["OTHER"],"content":"path和classpath区别 本文参考文章如下： Java环境变量PATH和CLASSPATH PATH and CLASSPATH java项目中的classpath到底是什么 ","date":"2020-06-13","objectID":"/posts/path-and-classpath-different/:0:0","tags":["classpath"],"title":"path和classpath简单说明","uri":"/posts/path-and-classpath-different/"},{"categories":["OTHER"],"content":"chrome的headless模式使用记录 ","date":"2020-10-15","objectID":"/posts/chrome-headless-convert-html-to-pdf/:0:0","tags":null,"title":"chrome的headless模式-网页转PDF","uri":"/posts/chrome-headless-convert-html-to-pdf/"},{"categories":["OTHER"],"content":"配置环境变量 C:\\Program Files (x86)\\Google\\Chrome\\Application ","date":"2020-10-15","objectID":"/posts/chrome-headless-convert-html-to-pdf/:1:0","tags":null,"title":"chrome的headless模式-网页转PDF","uri":"/posts/chrome-headless-convert-html-to-pdf/"},{"categories":["OTHER"],"content":"通过如下命令测试 chrome –headless –disable-gpu –print-to-pdf=d:\\baidu.pdf https://www.baidu.com ","date":"2020-10-15","objectID":"/posts/chrome-headless-convert-html-to-pdf/:2:0","tags":null,"title":"chrome的headless模式-网页转PDF","uri":"/posts/chrome-headless-convert-html-to-pdf/"},{"categories":["OTHER"],"content":"删除如下路径中的文件 C:\\Users\\username\\AppData\\Roaming\\Anki2\\jiawei\\collection.media ","date":"2020-10-15","objectID":"/posts/anki-clean-fdisk/:0:0","tags":null,"title":"anki删除牌组后media文件未删除占用磁盘空间的处理办法","uri":"/posts/anki-clean-fdisk/"},{"categories":["OTHER"],"content":"docker文件复制相关内容 ","date":"2020-10-15","objectID":"/posts/docker-copy-file/:0:0","tags":null,"title":"docker容器文件复制","uri":"/posts/docker-copy-file/"},{"categories":["OTHER"],"content":"docker容器和本机互传文件 首先需要确定docker容器的container_id,可以使用docker ps -a 查看你要操作的docker容器的container_id ","date":"2020-10-15","objectID":"/posts/docker-copy-file/:1:0","tags":null,"title":"docker容器文件复制","uri":"/posts/docker-copy-file/"},{"categories":["OTHER"],"content":"docker容器向本机传送文件 docker cp container_id:docker容器内的文件全路径 本机保存文件的全路径 例如：docker cp 4a2f08d2c1f8:/data1/configure.txt E:\\PHP\\configure.txt ","date":"2020-10-15","objectID":"/posts/docker-copy-file/:2:0","tags":null,"title":"docker容器文件复制","uri":"/posts/docker-copy-file/"},{"categories":["OTHER"],"content":"本机向docker容器传送文件 docker cp 本机保存文件的全路径 container_id:docker容器内的文件全路径 例如：docker cp E:\\PHP\\configure.txt 4a2f08d2c1f8:/data1/configure.txt ","date":"2020-10-15","objectID":"/posts/docker-copy-file/:3:0","tags":null,"title":"docker容器文件复制","uri":"/posts/docker-copy-file/"},{"categories":["OTHER"],"content":"docker安装mariadb，简化mariadb安装方式 ","date":"2020-10-15","objectID":"/posts/docker-install-mariadb/:0:0","tags":null,"title":"Docker安装MariaDB","uri":"/posts/docker-install-mariadb/"},{"categories":["OTHER"],"content":"安装mariadb步骤 docker search mariadb 搜索mariadb镜像（非必须） docker pull mariadb 下载docker镜像 docker images 查看本地已有的所有镜像 mkdir -p /data/mariadb/data 建一个目录作为和容器的映射目录 docker run –name mariadb -p 3306:3306 -e MYSQL_ROOT_PASSWORD=输入数据库root用户的密码 -v /data/mariadb/data:/var/lib/mysql -d mariadb 　–name启动容器设置容器名称为mariadb 　-p设置容器的3306端口映射到主机3306端口 　-e MYSQL_ROOT_PASSWORD设置环境变量数据库root用户密码为输入数据库root用户的密码 　-v设置容器目录/var/lib/mysql映射到本地目录/data/mariadb/data 　-d后台运行容器mariadb并返回容器id docker ps -a 查看容器是否运行 docker container update –restart=always 容器id 修改容器为自启动 进入容器docker exec -it 容器Id bash 在容器内登录数据库 mysql -uroot -proot密码 ","date":"2020-10-15","objectID":"/posts/docker-install-mariadb/:1:0","tags":null,"title":"Docker安装MariaDB","uri":"/posts/docker-install-mariadb/"},{"categories":["OTHER"],"content":"其他常用命令： docker start 容器id　启动容器 docker stop 容器id　停止容器 ","date":"2020-10-15","objectID":"/posts/docker-install-mariadb/:2:0","tags":null,"title":"Docker安装MariaDB","uri":"/posts/docker-install-mariadb/"},{"categories":["OTHER"],"content":"我自己常用的可以提高工作效率的软件 截图工具 snipaste 粘贴板工具 mac-ipaste window-ditto 邮箱客户端 window-outlook mac-自带的邮件 比对工具 bcompare 笔记软件 onenote（快速记录） emacs（整理归纳） 搜索 mac-自带的聚焦搜索 window-everything ","date":"2020-10-15","objectID":"/posts/common-efficiency-tools/:0:0","tags":null,"title":"常用效率工具","uri":"/posts/common-efficiency-tools/"},{"categories":["OTHER"],"content":"记录学习maven过程，以及自己的一点思考 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:0:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"eclipse中的项目是如何构建的？ eclipse通过ant给我们自动化构建项目，无需配置 eclipse中项目的打包编译都是ant完成的。 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:1:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"eclipse中maven配置 下载maven软件 配置maven软件到eclipse 在eclipse中配置setting.xml文件路径 在setting中配置本地仓库位置、阿里镜像仓库、JDK版本 在eclipse中update setting ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:2:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"maven中的坐标 根据如下三个坐标定义一个jar包位置 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:3:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"group id 公司名-公司网址倒写 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:3:1","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"artifact id 项目名 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:3:2","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"version 版本 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:3:3","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"packaging 项目的类型，打包会根据该选项打包 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:4:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"jar java项目 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:4:1","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"war web项目 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:4:2","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"pom project object mode项目对象模型 把project当成对象看待 通过maven构建工具可以让项目之间产生联系 pom一般作为逻辑父项目 只要一个项目有子项目，该项目必须是pom类型项目 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:4:3","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"maven项目的目录结构 src/main/java 真实目录的快捷目录，存放java代码 src/main/resources java项目是根路径，web项目是classes路径 src/test/java 测试java代码 src/test/resources 测试配置文件 pom.xml maven配置文件 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:5:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"maven项目之间的关系 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:6:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"依赖关系 通过标签depandency把另外一个项目的jar引入多年当前项目 自动下载另外一个项目所依赖的其他项目 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:6:1","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"继承关系 父项目是pom类型 如果子项目是别的项目的父项目也是pom类型 子项目的pom.xml文件中需引入parent标签 子项目的groupid、version与父项目相同时可以不配置 父项目pom.xml中是看不到子项目的，在逻辑上具有父子项目关系 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:6:2","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"聚合关系 前提是继承关系，会把子项目包含到父项目中 子项目的类型必须是maven moudle，而不是maven project 父项目的pom.xml可以看到子项目，module标签体现 和继承关系没有本质区别 继承关系和聚合关系中的父项目可管理项目的jar包版本 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:6:3","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"war类型项目 创建maven project时选择packaging为war 在webapp文件夹下新建META-INF和WEB-INF/web.xml pom.xml中导入servlet-api、jsp-api、jstl \u003cdependency\u003e \u003cgroupId\u003ejavax.servlet\u003c/groupId\u003e \u003cartifactId\u003ejavax.servlet-api\u003c/artifactId\u003e \u003cversion\u003e${servlet-version}\u003c/version\u003e \u003cscope\u003eprovided\u003c/scope\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003ejavax.servlet.jsp\u003c/groupId\u003e \u003cartifactId\u003ejsp-api\u003c/artifactId\u003e \u003cversion\u003e${jsp-version}\u003c/version\u003e \u003cscope\u003eprovided\u003c/scope\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003ejstl\u003c/groupId\u003e \u003cartifactId\u003ejstl\u003c/artifactId\u003e \u003cversion\u003e${jstl-version}\u003c/version\u003e \u003c/dependency\u003e 配置tomcat插件 \u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.tomcat.maven\u003c/groupId\u003e \u003cartifactId\u003etomcat7-maven-plugin\u003c/artifactId\u003e \u003cversion\u003e2.2\u003c/version\u003e \u003cconfiguration\u003e \u003c!-- 控制tomcat端口号 --\u003e \u003cport\u003e80\u003c/port\u003e \u003c!-- 项目发布到tomcat后的名称 --\u003e \u003c!-- / 相当于把项目发布名称为ROOT --\u003e \u003c!-- /abc --\u003e \u003cpath\u003e/\u003c/path\u003e \u003c/configuration\u003e \u003c/plugin\u003e \u003c/plugins\u003e scope指定是编译期使用还是运行期使用 servlet-api、jsp-api是编译期使用 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:7:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":["OTHER"],"content":"maven配合tomcat实现热部署 修改tomat/conf/tomcat-users.xml添加 \u003crole rolename=\"manager-gui\"/\u003e \u003crole rolename=\"manager-script\"/\u003e \u003cuser username=\"tomcat\" password=\"tomcat\" roles=\"manager-gui,manager-script\"/\u003e 在maven项目的pom.xml中tomcat插件的里配置 \u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.tomcat.maven\u003c/groupId\u003e \u003cartifactId\u003etomcat7-maven-plugin\u003c/artifactId\u003e \u003cversion\u003e2.2\u003c/version\u003e \u003cconfiguration\u003e \u003c!-- 控制tomcat端口号 --\u003e \u003cport\u003e80\u003c/port\u003e \u003c!-- 项目发布到tomcat后的名称 --\u003e \u003c!-- / 相当于把项目发布名称为ROOT --\u003e \u003c!-- /abc --\u003e \u003cpath\u003e/jqk\u003c/path\u003e \u003cusername\u003etomcat\u003c/username\u003e \u003cpassword\u003etomcat\u003c/password\u003e \u003curl\u003ehttp://192.168.139.128:8080/manager/text\u003c/url\u003e \u003c/configuration\u003e \u003c/plugin\u003e \u003c/plugins\u003e 右键项目–\u003e run as –\u003e maven build(以前写过,选择第二个) –\u003e输入 tomcat7:deploy 第一次发布 tomcat7:redeploy 不是第一次发布 ","date":"2020-10-15","objectID":"/posts/learn-maven-log/:8:0","tags":null,"title":"maven学习总结","uri":"/posts/learn-maven-log/"},{"categories":null,"content":"vlookup函数的用法 vlookup官网使用说明 您需要四条信息才能构建 VLOOKUP 语法： 要查找的值，也被称为查阅值。 查阅值所在的区域。 请记住，查阅值应该始终位于所在区域的第一列，这样 VLOOKUP 才能正常工作。 例如，如果查阅值位于单元格 C2 内，那么您的区域应该以 C 开头。 区域中包含返回值的列号。 例如，如果指定 B2： D11 作为区域，则应将 B 作为第一列，将 C 作为第二列进行计数，依此类推。 （可选）如果需要返回值的近似匹配，可以指定 TRUE；如果需要返回值的精确匹配，则指定 FALSE。 如果没有指定任何内容，默认值将始终为 TRUE 或近似匹配。 现在将上述所有内容集中在一起，如下所示： = VLOOKUP （查阅值、包含查阅值的区域、包含返回值的区域中的列号、近似匹配（TRUE）或完全匹配（FALSE））。 ","date":"2020-12-04","objectID":"/posts/vlookup/:1:0","tags":["vlookup"],"title":"vlookup","uri":"/posts/vlookup/"},{"categories":null,"content":"使用vlookup函数遇到的问题 excel用vlookup匹配两个表的数据，出现#N/A，但是表中明明有可以匹配的项 如果公式没错，那么肯定是没匹配的只是你看着一样，其实是不一样的比如有看不见的空格或者换行符等等检查方法很简单：把两个匹配项直接相等比如是两个在A1和H1 那么再任意单元格输入=a1=H1 如果返回false说明是不等的返回就是错误的 excel下拉复制时，向下填充的值都改变，我只想下面公式的A8自动增加 =VLOOKUP(A8,Sheet5!A4:M1765,10,) 使用$解决了该问题，了解下相对引用与绝对引用就可以理解这个问题 =VLOOKUP(A8,Sheet5!$A$4:$M$1765,10,) ","date":"2020-12-04","objectID":"/posts/vlookup/:2:0","tags":["vlookup"],"title":"vlookup","uri":"/posts/vlookup/"},{"categories":null,"content":" 目标一：第一个月»学习流程，创建10个campaign 目标二：第二个月»每天$10的稳定收益 目标三：第四个月»每天$100的稳定收益 时间：120天 资金：30000RMB 记录我的affiliate media buy之路，现在开始动手实践。 联系交流：QQ：767830361（请注明来意） ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:0:0","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"时间统计 Headline Time Total time 11:53 Day 2 2:25  今日目标 [1/5] 0:05  申请三个抽奖类offer 2:20 Day 1 9:28  今日总结 0:24  阅读知识管理BLOG 2:20  建立Follow Along 2:00  下载10个抽奖类的Landing Page 1:44  开发Mobidea爬虫 3:00 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:1:0","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"收支统计 日期 收支项 收支(单位：RMB) 备注 总预算 30000 购买追踪域名2个 -42 上网-ECS*1(33/月) -33 1核 512MB 追踪-ECS*1（0.67/小时） -93 2C4 2020-11-27~2020-12-03 STM+SPY -327 2个campaign，无转化 -32.8 追踪程序（试用阶段） 0 2020-12-03 追踪-ECS*1（85.79/周） -85.79 0 29386.41 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:2:0","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"Day 2 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:3:0","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"今日目标 [1/5] 申请三个抽奖类offer 下载10个抽奖类的Landing Page 修改完成3个LP 充值PropellerAds 创建一个LP的campaign ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:3:1","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"申请三个抽奖类offer 根据昨天爬取的Mobidea的数据，选择转化率高的抽奖类的offer excel使用vlookup函数匹配两个表的数据 根据数据申请了四个抽奖类的offer，iPhone、South Africa 把这四个offer录入Binom ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:3:2","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"Day 1 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:0","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"今日目标 [2/6] 阅读知识管理BLOG 建立Follow Along 下载10个抽奖类的Landing Page 修改完成3个LP 充值PropellerAds 创建一个LP的campaign ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:1","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"目标外任务 开发了mobidea一个Opportunities爬虫，分析offer ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:2","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"今日总结 学到了什么？ 写BLOG是一个学习的过程，而不是一个结果。写BLOG可以学到更多！ 创意不是从一张白纸开始，而是在别人的基础上再创意，所以LP要SPY啊。 确定了Follow Along格式，时间以及收支纳入统计，围绕这个Follow Along开展工作 简单学习了如何在Adplexity上选择offer，还需要继续研究这个平台。 遇到了什么问题？ 选择先做抽奖类的offer，但是没有申请到合适的offer。下载LP时，不能有的放矢。 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:3","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"阅读知识管理BLOG 简单了解了卢曼 Zettelkasten 方法组织个人知识 本以为写作是输出，其实写作不是思考的结果，而是思考发生的媒介。 关于创造力最坑爹神话之一就是它从无到有发生的，经常面对白纸一张开始创作（以前画画时候养成的坏习惯），却忽略了没有人能从零开始创造。 遇到困难总是死磕，但其实沿着最有趣的道路前进，同时进行多个项目也没什么不好 喜欢全文收藏，但其实收藏更像是把信息搬运（而非加工），途中没有增加任何知识。 总想建立一套完美的分类，但其实分类像建筑物，一经设计好再改进就面临彻底重构的问题。而我们吸收知识更像是神经回路不断被加强/减弱的过程，收集之后会慢慢的生长出来结构。 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:4","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"建立Follow Along 建立这个Follow Along的目的很简单，就是明确目标，监督自己，认识一些行业相关的朋友。 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:5","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"下载10个抽奖类的Landing Page 通过Adplexity下载抽奖类的LP，下面是一些筛选项 Filter: “Last 7 days” 或者 “Last 30 days” Days Running: 设置7天到无穷大 Ad Type: “Popup” 和 “Redirects” Device Type: 默认 Size: 默认，在找banners时需要设置这个 Country\u0026Language: 一般选择其中一个就可以了 Connection: 默认 Traffic source: 默认 Affiliate network: 默认 Tracking Tool: None Keyword: 选择on the landing page，输入你想要的offers，比如iPhone Xs 右上方筛选框: “Received most traffic” 尽可能多的下载不一样的LP ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:6","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"开发Mobidea爬虫 爬取数据，分析offer转化情况，申请转化较高的offer ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:4:7","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"前期已完成的工作 PopAds注册，这个注册很久了 Mobidea注册，同上 PropellerAds注册 Gotzha已申请，还未批准 ClickDealer已申请，还未批准 binom申请，安装 追踪域名注册 学习了pop直链的流程 建了2个campaign，无转化 ","date":"2020-12-03","objectID":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/:5:0","tags":["slip-box"],"title":"[Follow Along] 120 days and 30000RMB to start affiliate media buy","uri":"/posts/follow_along_120_days_and_30000rmb_to_start_affiliate_media_buy/"},{"categories":null,"content":"how to take smart notes ","date":"2020-12-03","objectID":"/posts/how_to_take_smart_notes/:0:0","tags":["take-notes"],"title":"how to take smart notes","uri":"/posts/how_to_take_smart_notes/"},{"categories":null,"content":"Introduction 写作不是研究、学习之后的事情，他是这些工作的催化剂（这么说准确么？） 高智商和成功之间没有可衡量的相关性，确实有很强的相关性的是另一种东西：一个人用多少自律或自控力来处理手头的任务 ","date":"2020-12-03","objectID":"/posts/how_to_take_smart_notes/:1:0","tags":["take-notes"],"title":"how to take smart notes","uri":"/posts/how_to_take_smart_notes/"},{"categories":null,"content":"test a auto","date":"2020-12-03","objectID":"/posts/how_to_take_smart_notes/:2:0","tags":["take-notes"],"title":"how to take smart notes","uri":"/posts/how_to_take_smart_notes/"},{"categories":null,"content":"卢曼经常说，他从不强迫自己去做自己不喜欢做的事情。“我只做容易做的事。只有当我马上知道如何去做的时候，我才会去写。如果我稍有动摇，我就会把事情放在一边，去做别的事情。 ","date":"2020-12-03","objectID":"/posts/slip_box_method/:0:0","tags":["slip-box"],"title":"slip box method","uri":"/posts/slip_box_method/"},{"categories":null,"content":"slip box method定义 一种存储和组织知识、扩展记忆以及生成新连接和想法的方法。简而言之，就是把你感兴趣或者觉得自己将来会用到的知识收集起来，然后用一种标准化的方式去处理这些笔记，建立笔记之间的联系，供你使用。 ","date":"2020-12-03","objectID":"/posts/slip_box_method/:1:0","tags":["slip-box"],"title":"slip box method","uri":"/posts/slip_box_method/"},{"categories":null,"content":"改变观念 写作不是思考的结果，而是思考发生的媒介。 没有人会从零开始一件事情（也不要这样做） 总是沿着最有趣的道路前进，同时进行多个项目也没有什么不好 ","date":"2020-12-03","objectID":"/posts/slip_box_method/:2:0","tags":["slip-box"],"title":"slip box method","uri":"/posts/slip_box_method/"},{"categories":null,"content":"信息获取与组织 标准化的行为，反而能激发创造力 收藏无用，你需要自己整理信息 杠铃式阅读法（反复锻炼重点部位） 分类是个坏主意 ","date":"2020-12-03","objectID":"/posts/slip_box_method/:3:0","tags":["slip-box"],"title":"slip box method","uri":"/posts/slip_box_method/"},{"categories":null,"content":"References Zettelkasten: https://niklas-luhmann-archiv.de/nachlass/uebersicht How to take smart notes: https://book.douban.com/subject/30216624/ Zettelkasten 是德语，英语是 Slip-box，翻译过来就是纸条盒、便签盒、卡片盒子、卡片箱；简称卡片盒笔记法，或者卡盒笔记法。: https://www.zhihu.com/question/384309878/answer/1120682799 将卡片连接起来的过程就像你的大脑一样。: https://www.heise.de/newsticker/meldung/Missing-Link-Luhmanns-Denkmaschine-endlich-im-Netz-4364512.html?seite=all\u0026hg=1\u0026hgi=0\u0026hgf=false Zettelkasten 的应用: https://emvi.com/blog/luhmanns-zettelkasten-a-productivity-tool-that-works-like-your-brain-N9Gd2G4aPv 观念的改变: https://fortelabs.co/blog/how-to-take-smart-notes/ ","date":"2020-12-03","objectID":"/posts/slip_box_method/:4:0","tags":["slip-box"],"title":"slip box method","uri":"/posts/slip_box_method/"}]